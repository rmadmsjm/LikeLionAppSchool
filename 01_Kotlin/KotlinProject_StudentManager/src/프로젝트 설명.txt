**학생 정보 관리 프로그램**

1. 처음 시작하면 메뉴를 보여준다

[ 메인 메뉴 ]
1. 학생 정보 입력
2. 학생 정보 검색
3. 학생 정보 전체 출력
4. 각 과목별 총점과 평균 확인
5. 종료

번호를 입력하세요 :

2. 메인 메뉴에서 1번을 선택하면

현재 입력된 학생 수 :
학생 이름 :
학생 나이 :
국어 점수 :
영어 점수 :
수학 점수 :

입력이 완료되면 메인 메뉴 보여준다

3. 메인 메뉴에서 2번을 선택하면

검색할 학생 이름 :
학생 이름 :
학생 나이 :
국어 점수 :
영어 점수 :
수학 점수 :

메인 메뉴 보여줌

4. 메인 메뉴에서 3번을 선택하면

학생 이름 :
학생 나이 :
국어 점수 :
영어 점수 :
수학 점수 :

위와 같은 형태로 모든 학생들 정보를 보여주고
메인 메뉴 보여줌

5. 메인 메뉴에서 4번을 선택하면
국어 총점 :
영어 총점 :
수학 총점 :
국어 평균 :
영어 평균 :
수학 평균 :
메인 메뉴 보여줌

6. 메인 메뉴에서 5번을 선택하면
프로그램이 종료되었습니다
를 보여주고 프로그램 종료한다

7. 학생의 정보는 모두 파일로 저장한다 → 파일 입출력, 스트림

-------------------------------------------------------------------------------------------------------

**개발 패턴**
개발 프레임워크라고 부르기도 함
개발과 유지/보수를 용이하게 하기 위해 각 파일마다 역할을 지정하고 그 역할에 맞는 기능을 구현하도록 하는 것

1. MVC 패턴
1) M (Model)
데이터를 저장하고 관리하는 요소
Model을 여러 가지 역할로 나누기도 함
Model(VD, Value Object) - 순수 데이터만 저장하고 반환하는 역할만 수행함
DAO(Data Access Object) - Model이 가지고 있는 데이터를 외부(파일, 서버 등)에 저장하고
                          외부에 저장되어 있는 데이터를 Model 담아주는 등의 역할을 수행함
Repository - Model과 DAO 중간에 위치함
             DAO가 읽어 온 데이터를 Repository에 전달하고 Repository가 Model에 저장함
             Model에 저장된 데이터를 Repository가 읽어들여 DAO로 보내면 DAO가 저장소에 저장함

2) V (View)
Model이 가지고 있는 데이터를 이용해 사용자에게 보여줄 화면을 구성함
V를 더 확장하여 P로 지정하는 MVP 패턴이 있고, V와 M을 더 확장해 사용하는 MVVM 패턴도 있음

3) C (Controller)
프로그램 전체의 흐름을 제어하는 역항르 수행함

-------------------------------------------------------------------------------------------------------

**패키지와 클래스 설명**

com.lion.project1.controller : 컨트롤러를 모아놓은 패키지
com.lion.project1.model : Model을 모아놓은 패키지
com.lion.project1.view : View를 모아놓은 패키지
com.lion.project1.dao : 데이터를 저장하고 읽어오는 클래스를 모아놓은 패키지
com.lion.project1.activity : 각 상태에 대한 클래스를 모아놓은 패키지
com.lion.project1.util : 기타 역할을 수행하는 클래스나 인터페이스를 모아놓은 패키지