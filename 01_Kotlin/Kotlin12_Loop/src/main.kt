// 반복문
// 코드의 일부분을 반복하고자 할 때 사용함
// for : 데이터를 관리하는 요소를 가지고 반복하고자 할 때
//       반복 횟수가 결정되어 있을 때
//       반복에 대한 최소 최대 범위가 결정되어 있을 때
// while : 반복할 조건 혹은 반복을 중단할 조건이 있을 때
// do while : 반복할 조건 혹은 반복을 중단할 조건이 있을 때

fun main() {
    // num1 .. num2 : 숫자1부터 숫자2까지 1씩 증가되는 값을 관리하는 요소를 만듦
    println((1..10).toList())

    // num1 until num2 : num1부터 (num2-1)까지 1씩 증가되는 값을 관리하는 요소를 만듦
    println((1 until 10).toList())
    println((1 ..< 10).toList())

    // step : step을 지정하면 증가폭을 설정할 수 있음
    println((1..10 step 2).toList())

    // downTo : 1씩 감소되는 값을 관리할 수 있는 요소를 만듦
    println((10 downTo 1).toList())

    // downTo도 step을 설정하면 감소폭을 설정할 수 있음
    println((10 downTo 1 step 2).toList())

    println("----------------------------------")

    // for : 데이터를 관리하는 요소를 통해 반복함
    // 반복 횟수가 결정되어 있을 때는 반복 횟수만큼의 데이터를 가진 요소를 통해 반복함
    // 최소와 최대 범위가 결정되어 있다면 결정되어 있는 최소와 최대 범위의 값을 가진 요소를 만들어 반복함
    // 1..10 코드로 인해 1부터 10까지 값 10개를 관리하는 요소가 생성됨
    // 이를 통해 for문을 사용하기 때문에 for문이 관리하는 코드가 총 10번 반복함
    // 이때, 반복 번째에 해당하는 값이 in 좌측에 있는 변수에 담겨짐
    for(v1 in 1..10) {
        println("v1 : $v1")
    }

    // while
    // 주어진 조건식이 true인 경우에 관리하는 코드를 반복함
    var a1 = 0
    while(a1 < 10) {
        println("while - $a1")
        a1++
    }

    // do while
    // 주어진 조건식이 true인 경우에 관리하는 코드를 반복함
    var a2 = 0
    do {
        println("do while - $a2")
        a2++
    } while(a2 < 10)

    // while과 do while의 차이
    // while은 조건식이 상단에, do while은 하단에 있음
    // 이 때문에 조건식이 처음부터 거짓이라면 while문은 한 번도 수행되지 않고
    // do while문은 한 번은 수행됨
    // 조건식에 들어가는 변수의 값이 사전에 결정되어 있다면 -> while
    // 조건식에 들어가는 변수의 값을 반복문 안에서 결정하고 있다면 -> do while
}